/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
export {}
declare global {
  const BotInfo: typeof import('store/ServerStore')['BotInfo']
  const DeviceInfo: typeof import('store/ServerStore')['DeviceInfo']
  const EffectScope: typeof import('vue')['EffectScope']
  const LocaleInfo: typeof import('store/ServerStore')['LocaleInfo']
  const LocaleState: typeof import('store/LocaleStore')['LocaleState']
  const computed: typeof import('vue')['computed']
  const createApp: typeof import('vue')['createApp']
  const createRouter: typeof import('vue-router')['createRouter']
  const createWebHistory: typeof import('vue-router')['createWebHistory']
  const customRef: typeof import('vue')['customRef']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const effectScope: typeof import('vue')['effectScope']
  const generateSentenceCase: typeof import('utils/StringHelper')['generateSentenceCase']
  const generateTitleCase: typeof import('utils/StringHelper')['generateTitleCase']
  const getCookie: typeof import('utils/CookieHelper')['getCookie']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const getCustomSlug: typeof import('utils/StringHelper')['getCustomSlug']
  const getLocale: typeof import('utils/StringHelper')['getLocale']
  const getSlug: typeof import('utils/StringHelper')['getSlug']
  const getSlugWithoutDash: typeof import('utils/StringHelper')['getSlugWithoutDash']
  const getUnsignedLetters: typeof import('utils/StringHelper')['getUnsignedLetters']
  const h: typeof import('vue')['h']
  const inject: typeof import('vue')['inject']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const markRaw: typeof import('vue')['markRaw']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const setCookie: typeof import('utils/CookieHelper')['setCookie']
  const setLinkAlternateTag: typeof import('utils/SeoHelper/index')['setLinkAlternateTag']
  const setLinkAmphtmlTag: typeof import('utils/SeoHelper/index')['setLinkAmphtmlTag']
  const setLinkAuthorTag: typeof import('utils/SeoHelper/index')['setLinkAuthorTag']
  const setLinkCanonicalTag: typeof import('utils/SeoHelper/index')['setLinkCanonicalTag']
  const setLinkNextTag: typeof import('utils/SeoHelper/index')['setLinkNextTag']
  const setLinkPrevTag: typeof import('utils/SeoHelper/index')['setLinkPrevTag']
  const setLinkTwitterTitleTag: typeof import('utils/SeoHelper/index')['setLinkTwitterTitleTag']
  const setMetaAuthorTag: typeof import('utils/SeoHelper/index')['setMetaAuthorTag']
  const setMetaDescriptionTag: typeof import('utils/SeoHelper/index')['setMetaDescriptionTag']
  const setMetaGeoPositionTag: typeof import('utils/SeoHelper/index')['setMetaGeoPositionTag']
  const setMetaGeoRegionTag: typeof import('utils/SeoHelper/index')['setMetaGeoRegionTag']
  const setMetaGoogleBotTag: typeof import('utils/SeoHelper/index')['setMetaGoogleBotTag']
  const setMetaGoogleSiteVerificationTag: typeof import('utils/SeoHelper/index')['setMetaGoogleSiteVerificationTag']
  const setMetaICBMTag: typeof import('utils/SeoHelper/index')['setMetaICBMTag']
  const setMetaKeywordsTag: typeof import('utils/SeoHelper/index')['setMetaKeywordsTag']
  const setMetaOgDescriptionTag: typeof import('utils/SeoHelper/index')['setMetaOgDescriptionTag']
  const setMetaOgImageTag: typeof import('utils/SeoHelper/index')['setMetaOgImageTag']
  const setMetaOgSiteNameTag: typeof import('utils/SeoHelper/index')['setMetaOgSiteNameTag']
  const setMetaOgTitleTag: typeof import('utils/SeoHelper/index')['setMetaOgTitleTag']
  const setMetaOgTypeTag: typeof import('utils/SeoHelper/index')['setMetaOgTypeTag']
  const setMetaOgUrlTag: typeof import('utils/SeoHelper/index')['setMetaOgUrlTag']
  const setMetaRobotsTag: typeof import('utils/SeoHelper/index')['setMetaRobotsTag']
  const setMetaTwitterCardTag: typeof import('utils/SeoHelper/index')['setMetaTwitterCardTag']
  const setMetaTwitterDescriptionTag: typeof import('utils/SeoHelper/index')['setMetaTwitterDescriptionTag']
  const setMetaTwitterImageTag: typeof import('utils/SeoHelper/index')['setMetaTwitterImageTag']
  const setMetaViewportTag: typeof import('utils/SeoHelper/index')['setMetaViewportTag']
  const setSeoTag: typeof import('utils/SeoHelper/index')['setSeoTag']
  const setTitleTag: typeof import('utils/SeoHelper/index')['setTitleTag']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const useAttrs: typeof import('vue')['useAttrs']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useRoute: typeof import('vue-router')['useRoute']
  const useRouter: typeof import('vue-router')['useRouter']
  const useSentenceCase: typeof import('composable/useStringHelper')['useSentenceCase']
  const useSlots: typeof import('vue')['useSlots']
  const useSlug: typeof import('composable/useStringHelper')['useSlug']
  const useSlugWithoutDash: typeof import('composable/useStringHelper')['useSlugWithoutDash']
  const useTitleCase: typeof import('composable/useStringHelper')['useTitleCase']
  const useUnsignedLetters: typeof import('composable/useStringHelper')['useUnsignedLetters']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, VNode, WritableComputedRef } from 'vue'
}
// for vue template auto import
import { UnwrapRef } from 'vue'
declare module 'vue' {
  interface ComponentCustomProperties {
    readonly BotInfo: UnwrapRef<typeof import('store/ServerStore.ts')['BotInfo']>
    readonly DeviceInfo: UnwrapRef<typeof import('store/ServerStore.ts')['DeviceInfo']>
    readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
    readonly LocaleInfo: UnwrapRef<typeof import('store/ServerStore.ts')['LocaleInfo']>
    readonly LocaleState: UnwrapRef<typeof import('store/LocaleStore.ts')['LocaleState']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
    readonly createRouter: UnwrapRef<typeof import('vue-router')['createRouter']>
    readonly createWebHistory: UnwrapRef<typeof import('vue-router')['createWebHistory']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly generateSentenceCase: UnwrapRef<typeof import('utils/StringHelper.ts')['generateSentenceCase']>
    readonly generateTitleCase: UnwrapRef<typeof import('utils/StringHelper.ts')['generateTitleCase']>
    readonly getCookie: UnwrapRef<typeof import('utils/CookieHelper.ts')['getCookie']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly getCustomSlug: UnwrapRef<typeof import('utils/StringHelper.ts')['getCustomSlug']>
    readonly getLocale: UnwrapRef<typeof import('utils/StringHelper.ts')['getLocale']>
    readonly getSlug: UnwrapRef<typeof import('utils/StringHelper.ts')['getSlug']>
    readonly getSlugWithoutDash: UnwrapRef<typeof import('utils/StringHelper.ts')['getSlugWithoutDash']>
    readonly getUnsignedLetters: UnwrapRef<typeof import('utils/StringHelper.ts')['getUnsignedLetters']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
    readonly onRenderTriggered: UnwrapRef<typeof import('vue')['onRenderTriggered']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly resolveComponent: UnwrapRef<typeof import('vue')['resolveComponent']>
    readonly setCookie: UnwrapRef<typeof import('utils/CookieHelper.ts')['setCookie']>
    readonly setLinkAlternateTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setLinkAlternateTag']>
    readonly setLinkAmphtmlTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setLinkAmphtmlTag']>
    readonly setLinkAuthorTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setLinkAuthorTag']>
    readonly setLinkCanonicalTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setLinkCanonicalTag']>
    readonly setLinkNextTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setLinkNextTag']>
    readonly setLinkPrevTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setLinkPrevTag']>
    readonly setLinkTwitterTitleTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setLinkTwitterTitleTag']>
    readonly setMetaAuthorTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaAuthorTag']>
    readonly setMetaDescriptionTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaDescriptionTag']>
    readonly setMetaGeoPositionTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaGeoPositionTag']>
    readonly setMetaGeoRegionTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaGeoRegionTag']>
    readonly setMetaGoogleBotTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaGoogleBotTag']>
    readonly setMetaGoogleSiteVerificationTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaGoogleSiteVerificationTag']>
    readonly setMetaICBMTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaICBMTag']>
    readonly setMetaKeywordsTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaKeywordsTag']>
    readonly setMetaOgDescriptionTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaOgDescriptionTag']>
    readonly setMetaOgImageTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaOgImageTag']>
    readonly setMetaOgSiteNameTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaOgSiteNameTag']>
    readonly setMetaOgTitleTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaOgTitleTag']>
    readonly setMetaOgTypeTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaOgTypeTag']>
    readonly setMetaOgUrlTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaOgUrlTag']>
    readonly setMetaRobotsTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaRobotsTag']>
    readonly setMetaTwitterCardTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaTwitterCardTag']>
    readonly setMetaTwitterDescriptionTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaTwitterDescriptionTag']>
    readonly setMetaTwitterImageTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaTwitterImageTag']>
    readonly setMetaViewportTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaViewportTag']>
    readonly setSeoTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setSeoTag']>
    readonly setTitleTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setTitleTag']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly toValue: UnwrapRef<typeof import('vue')['toValue']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
    readonly useRoute: UnwrapRef<typeof import('vue-router')['useRoute']>
    readonly useRouter: UnwrapRef<typeof import('vue-router')['useRouter']>
    readonly useSentenceCase: UnwrapRef<typeof import('composable/useStringHelper.ts')['useSentenceCase']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly useSlug: UnwrapRef<typeof import('composable/useStringHelper.ts')['useSlug']>
    readonly useSlugWithoutDash: UnwrapRef<typeof import('composable/useStringHelper.ts')['useSlugWithoutDash']>
    readonly useTitleCase: UnwrapRef<typeof import('composable/useStringHelper.ts')['useTitleCase']>
    readonly useUnsignedLetters: UnwrapRef<typeof import('composable/useStringHelper.ts')['useUnsignedLetters']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
  }
}
declare module '@vue/runtime-core' {
  interface ComponentCustomProperties {
    readonly BotInfo: UnwrapRef<typeof import('store/ServerStore.ts')['BotInfo']>
    readonly DeviceInfo: UnwrapRef<typeof import('store/ServerStore.ts')['DeviceInfo']>
    readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
    readonly LocaleInfo: UnwrapRef<typeof import('store/ServerStore.ts')['LocaleInfo']>
    readonly LocaleState: UnwrapRef<typeof import('store/LocaleStore.ts')['LocaleState']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
    readonly createRouter: UnwrapRef<typeof import('vue-router')['createRouter']>
    readonly createWebHistory: UnwrapRef<typeof import('vue-router')['createWebHistory']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly generateSentenceCase: UnwrapRef<typeof import('utils/StringHelper.ts')['generateSentenceCase']>
    readonly generateTitleCase: UnwrapRef<typeof import('utils/StringHelper.ts')['generateTitleCase']>
    readonly getCookie: UnwrapRef<typeof import('utils/CookieHelper.ts')['getCookie']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly getCustomSlug: UnwrapRef<typeof import('utils/StringHelper.ts')['getCustomSlug']>
    readonly getLocale: UnwrapRef<typeof import('utils/StringHelper.ts')['getLocale']>
    readonly getSlug: UnwrapRef<typeof import('utils/StringHelper.ts')['getSlug']>
    readonly getSlugWithoutDash: UnwrapRef<typeof import('utils/StringHelper.ts')['getSlugWithoutDash']>
    readonly getUnsignedLetters: UnwrapRef<typeof import('utils/StringHelper.ts')['getUnsignedLetters']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
    readonly onRenderTriggered: UnwrapRef<typeof import('vue')['onRenderTriggered']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly resolveComponent: UnwrapRef<typeof import('vue')['resolveComponent']>
    readonly setCookie: UnwrapRef<typeof import('utils/CookieHelper.ts')['setCookie']>
    readonly setLinkAlternateTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setLinkAlternateTag']>
    readonly setLinkAmphtmlTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setLinkAmphtmlTag']>
    readonly setLinkAuthorTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setLinkAuthorTag']>
    readonly setLinkCanonicalTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setLinkCanonicalTag']>
    readonly setLinkNextTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setLinkNextTag']>
    readonly setLinkPrevTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setLinkPrevTag']>
    readonly setLinkTwitterTitleTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setLinkTwitterTitleTag']>
    readonly setMetaAuthorTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaAuthorTag']>
    readonly setMetaDescriptionTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaDescriptionTag']>
    readonly setMetaGeoPositionTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaGeoPositionTag']>
    readonly setMetaGeoRegionTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaGeoRegionTag']>
    readonly setMetaGoogleBotTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaGoogleBotTag']>
    readonly setMetaGoogleSiteVerificationTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaGoogleSiteVerificationTag']>
    readonly setMetaICBMTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaICBMTag']>
    readonly setMetaKeywordsTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaKeywordsTag']>
    readonly setMetaOgDescriptionTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaOgDescriptionTag']>
    readonly setMetaOgImageTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaOgImageTag']>
    readonly setMetaOgSiteNameTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaOgSiteNameTag']>
    readonly setMetaOgTitleTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaOgTitleTag']>
    readonly setMetaOgTypeTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaOgTypeTag']>
    readonly setMetaOgUrlTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaOgUrlTag']>
    readonly setMetaRobotsTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaRobotsTag']>
    readonly setMetaTwitterCardTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaTwitterCardTag']>
    readonly setMetaTwitterDescriptionTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaTwitterDescriptionTag']>
    readonly setMetaTwitterImageTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaTwitterImageTag']>
    readonly setMetaViewportTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setMetaViewportTag']>
    readonly setSeoTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setSeoTag']>
    readonly setTitleTag: UnwrapRef<typeof import('utils/SeoHelper/index.ts')['setTitleTag']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly toValue: UnwrapRef<typeof import('vue')['toValue']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
    readonly useRoute: UnwrapRef<typeof import('vue-router')['useRoute']>
    readonly useRouter: UnwrapRef<typeof import('vue-router')['useRouter']>
    readonly useSentenceCase: UnwrapRef<typeof import('composable/useStringHelper.ts')['useSentenceCase']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly useSlug: UnwrapRef<typeof import('composable/useStringHelper.ts')['useSlug']>
    readonly useSlugWithoutDash: UnwrapRef<typeof import('composable/useStringHelper.ts')['useSlugWithoutDash']>
    readonly useTitleCase: UnwrapRef<typeof import('composable/useStringHelper.ts')['useTitleCase']>
    readonly useUnsignedLetters: UnwrapRef<typeof import('composable/useStringHelper.ts')['useUnsignedLetters']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
  }
}
